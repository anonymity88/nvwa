--za-mode=<value>
--xegpu-fold-alias-ops
--write-experimental-debuginfo
--workgroup-size=<int>
--workers=20
--widest-int-supported=<uint>
--wave64
--vulkan-runner-spirv-webgpu-prepare
--vulkan-runner
--vp-static-alloc
--vp-counters-per-site=<number>
--vl=<int>
--virtual-vector-size=<long>
--view-op-graph='print-data-flow-edges=false
--view-op-graph
--version--verify-roundtrip
--verify-region-info
--verify-each=true
--verify-each=false
--verify-each
--verify-diagnostics
--ver=<string>
--vendor=<string>
--vectorize-reductions
--vectorize-affine-loop-nest
--vector-shape-ratio=<int>
--vector-bufferize
--use-rank-reducing-slices
--use-nvgpu
--use-generic-functions
--use-foreach
--use-bare-ptr-memref-call-conv
--use-bare-pointers-for-kernels
--use-bare-pointers-for-host
--use-arith-ops
--use-aligned-alloc
--use-64bit-index
--use-32-bit
--up-to-factor=true'
--unsafe-math
--unroll-up-to-factor
--unroll-order=<long>
--unroll-num-reps=<uint>
--unroll-jam-factor=<uint>
--unroll-full-threshold=<uint>
--unroll-full
--unroll-factor=<ulong>
--unroll-factor=<uint>
--unroll-based-on-type
--unroll
--unknown-type-conversion=<string>
--type-based-intrinsic-cost
--triple=<string>
--translate
--transform=%s
--transform-preload-library=transform-library-paths=%p%{fs-sep}include%{fs-sep}test-interpreter-library-invalid
--transform-preload-library
--transform-opt
--transform-library-paths=<string>
--transform-interpreter=entry-point=small
--transform-interpreter=entry-point=private_helper
--transform-interpreter=entry-point=entry_point
--transform-interpreter=entry-point=all
--transform-interpreter='entry-point=__transform_main_v2'
--transform-interpreter="entry-point=entry_point"
--transform-interpreter="debug-payload-root-tag=payload"
--transform-interpreter
--transform-infer-effects
--transform-file-name=<string>
--transform-entry-point=external_def
--transform-dialect-check-uses
--tosa-validate=strict-op-spec-alignment
--tosa-validate
--tosa-to-tensor
--tosa-to-scf
--tosa-to-mlprogram
--tosa-to-linalg-pipeline
--tosa-to-linalg-named
--tosa-to-linalg
--tosa-to-arith="include-apply-rescale=true
--tosa-to-arith="include-apply-rescale=false"
--tosa-to-arith
--tosa-test-quant-utils
--tosa-optional-decompositions
--tosa-make-broadcastable
--tosa-layerwise-constant-fold="aggressive-reduce-constant=true"
--tosa-layerwise-constant-fold
--tosa-infer-shapes
--topological-sort
--top-down
--toolkit=<string>
--tile-sizes=<uint>
--tile-sizes=<long>
--tile-size=<uint>
--threshold=100'
--test.sh'
--test-written-to='interprocedural=false'
--test-written-to='interprocedural=false
--test-written-to='assume-func-writes=true'
--test-written-to
--test-wrap-scf-while-loop-in-zero-trip-check='force-create-check=true'
--test-wrap-scf-while-loop-in-zero-trip-check
--test-verify-uselistorder
--test-vector-warp-distribute=rewrite-warp-ops-to-scf-if
--test-vector-warp-distribute=propagate-distribution
--test-vector-warp-distribute="hoist-uniform"
--test-vector-warp-distribute="hoist-uniform
--test-vector-warp-distribute
--test-vector-unrolling-patterns=unroll-based-on-type
--test-vector-unrolling-patterns="unroll-based-on-type
--test-vector-unrolling-patterns
--test-vector-transferop-opt
--test-vector-transfer-unrolling-patterns=reverse-unroll-order
--test-vector-transfer-unrolling-patterns
--test-vector-transfer-forwarding-patterns
--test-vector-transfer-flatten-patterns=target-vector-bitwidth=128
--test-vector-transfer-flatten-patterns
--test-vector-transfer-collapse-inner-most-dims
--test-vector-to-vector-lowering="unroll"
--test-vector-to-vector-lowering
--test-vector-scan-lowering
--test-vector-reduction-to-spirv-dot-prod
--test-vector-reduction-to-contract-patterns
--test-vector-linearize=target-vector-bitwidth=128
--test-vector-linearize=target-vector-bitwidth=0
--test-vector-linearize
--test-vector-gather-lowering
--test-vector-extract-strided-slice-lowering
--test-vector-emulate-masked-load-store
--test-vector-contraction-prepare-for-mmt-lowering
--test-vector-chained-reduction-folding-patterns
--test-vector-break-down-reduction-patterns
--test-vector-break-down-bitcast
--test-type-interfaces
--test-transform-dialect-interpreter=test-module-generation=1
--test-transform-dialect-interpreter='enforce-single-top-level-transform-op=0'
--test-transform-dialect-interpreter
--test-transform-dialect-erase-schedule
--test-trait-folder
--test-tracking-listener
--test-topological-sort-analysis
--test-to-llvmir
--test-textual-pm-nested-pipeline
--test-tensor-transform-patterns=test-tracking-listener
--test-tensor-transform-patterns=test-rewrite-extract-slice-from-collapse-shape
--test-tensor-transform-patterns=test-reassociative-reshape-folding
--test-tensor-transform-patterns=test-fold-into-pack-and-unpack
--test-tensor-transform-patterns=test-fold-constant-extract-slice
--test-tensor-transform-patterns=test-fold-consecutive-insert-extract-slice
--test-tensor-transform-patterns=test-drop-redundant-insert-slice-rank-expansion
--test-tensor-transform-patterns="test-simplify-pack-unpack-patterns"
--test-tensor-transform-patterns="test-rewrite-extract-slice-from-collapse-shape
--test-tensor-transform-patterns
--test-tensor-copy-insertion=allow-return-allocs-from-loops
--test-tensor-copy-insertion="must-infer-memory-space"
--test-tensor-copy-insertion="bufferize-function-boundaries"
--test-tensor-copy-insertion="allow-return-allocs-from-loops
--test-tensor-copy-insertion
--test-target-materialization-with-no-uses
--test-take-body
--test-symbol-uses
--test-symbol-rauw
--test-swap-subtensor-padtensor
--test-swap-extract-slice-with-fill-pattern
--test-strict-pattern-driver="strictness=ExistingOps"
--test-strict-pattern-driver="strictness=ExistingAndNewOps"
--test-strict-pattern-driver="strictness=AnyOp"
--test-strict-pattern-driver
--test-stats-pass
--test-spirv-target-env
--test-spirv-roundtrip-debug
--test-spirv-roundtrip
--test-spirv-op-availability
--test-spirv-module-combiner
--test-spirv-entry-point-abi="workgroup-size=32,8
--test-spirv-entry-point-abi="workgroup-size=32"
--test-spirv-entry-point-abi="target-width=32"
--test-spirv-entry-point-abi="subgroup-size=4"
--test-spirv-entry-point-abi
--test-sink-vector-broadcast
--test-simplify-pack-unpack-patterns
--test-side-effects
--test-shape-function-report
--test-scf-while-op-builder
--test-scf-uplift-while-to-for
--test-scf-pipelining=no-epilogue-peeling
--test-scf-pipelining=annotate
--test-scf-pipelining
--test-scf-parallel-loop-collapsing
--test-scf-if-utils
--test-scf-for-utils=test-replace-with-new-yields
--test-scf-for-utils
--test-scalar-vector-transfer-lowering=allow-multiple-uses
--test-scalar-vector-transfer-lowering
--test-rewrite-extract-slice-from-collapse-shape
--test-rewrite-dynamic-op
--test-return-type
--test-replace-with-new-yields
--test-remapped-value
--test-recursive-types
--test-reassociative-reshape-folding
--test-print-topological-sort
--test-print-shape-mapping
--test-print-nesting
--test-print-liveness
--test-print-invalid
--test-print-dominance
--test-print-defuse
--test-print-callgraph
--test-pm-nested-pipeline
--test-pdll-pass
--test-pdl-bytecode-pass
--test-patterns='top-down=true'
--test-patterns='top-down=false'
--test-patterns="max-iterations=1"
--test-patterns="max-iterations=1
--test-patterns
--test-pattern-selective-replacement
--test-pass-invalid-parent
--test-pass-failure
--test-pass-create-invalid-ir
--test-outer-loop-sizes=<long>
--test-options-pass-pipeline='list=1
--test-options-pass-pipeline
--test-options-pass
--test-operations-equality
--test-opaque-loc
--test-one-to-n-type-conversion="convert-tuple-ops"
--test-one-to-n-type-conversion="convert-func-ops"
--test-one-to-n-type-conversion="convert-func-ops
--test-one-to-n-type-conversion
--test-nvgpu-mmasync-f32-to-tf32-patterns="precision=tf32x3"
--test-nvgpu-mmasync-f32-to-tf32-patterns="precision=tf32"
--test-nvgpu-mmasync-f32-to-tf32-patterns
--test-next-access='interprocedural=false'
--test-next-access='interprocedural=false
--test-next-access='assume-func-reads=true'
--test-next-access
--test-multi-buffering=multiplier=5
--test-multi-buffering
--test-module-pass
--test-module-generation
--test-mlir-reducer
--test-mesh-simplifications
--test-mesh-resharding-spmdization
--test-mesh-process-multi-index-op-lowering
--test-mesh-all-slice-op-lowering
--test-merge-blocks
--test-memref-stride-calculation
--test-memref-dependence-check
--test-memref-bound-check
--test-math-to-vcix
--test-math-polynomial-approximation=enable-avx2
--test-math-polynomial-approximation="enable-avx2"
--test-math-polynomial-approximation
--test-math-algebraic-simplification
--test-matchers
--test-match-reduction
--test-mapping-to-processing-elements
--test-make-isolated-from-above=simple
--test-make-isolated-from-above=clone-ops-with-operands
--test-make-isolated-from-above=clone-ops-with-no-operands
--test-make-isolated-from-above
--test-lower-to-llvm
--test-lower-to-arm-sme
--test-lower-to-arm-neon
--test-loop-unrolling='unroll-factor=3'
--test-loop-unrolling='unroll-factor=2'
--test-loop-unrolling='unroll-factor=2
--test-loop-unrolling="unroll-factor=3"
--test-loop-unrolling="unroll-factor=1"
--test-loop-unrolling
--test-loop-permutation="permutation-map=2,1,0"
--test-loop-permutation="permutation-map=2,0,1"
--test-loop-permutation="permutation-map=1,2,0"
--test-loop-permutation="permutation-map=1,0,2"
--test-loop-permutation="permutation-map=0,2,1"
--test-loop-permutation="permutation-map=0,1,2"
--test-loop-permutation
--test-loop-fusion=test-loop-fusion-transformation
--test-loop-fusion=test-loop-fusion-slice-computation
--test-loop-fusion=test-loop-fusion-dependence-check
--test-loop-fusion-transformation
--test-loop-fusion-slice-computation
--test-loop-fusion-dependence-check
--test-loop-fusion
--test-liveness-analysis
--test-linalg-transform-patterns=test-vector-transfer-forwarding-patterns
--test-linalg-transform-patterns=test-swap-subtensor-padtensor
--test-linalg-transform-patterns=test-patterns
--test-linalg-transform-patterns=test-linalg-to-vector-patterns
--test-linalg-transform-patterns=test-erase-unused-operands-and-results
--test-linalg-transform-patterns=test-erase-unnecessary-inputs
--test-linalg-transform-patterns="test-generalize-tensor-unpack"
--test-linalg-transform-patterns="test-generalize-tensor-pack"
--test-linalg-transform-patterns="test-generalize-pad-tensor"
--test-linalg-transform-patterns
--test-linalg-to-vector-patterns
--test-linalg-pad-fusion
--test-linalg-greedy-fusion
--test-linalg-elementwise-fusion-patterns=fuse-with-reshape-by-expansion
--test-linalg-elementwise-fusion-patterns=fuse-with-reshape-by-collapsing-control
--test-linalg-elementwise-fusion-patterns=fuse-with-reshape-by-collapsing
--test-linalg-elementwise-fusion-patterns=fuse-multiuse-producer
--test-linalg-elementwise-fusion-patterns=fuse-generic-ops-control
--test-linalg-elementwise-fusion-patterns=control-fusion-by-expansion
--test-linalg-elementwise-fusion-patterns=collapse-dimensions-control=2,3
--test-linalg-elementwise-fusion-patterns
--test-linalg-drop-unit-dims
--test-linalg-decompose-ops=remove-dead-args-and-results
--test-linalg-decompose-ops
--test-linalg-data-layout-propagation
--test-legalize-unknown-root-patterns
--test-legalize-type-conversion
--test-legalize-patterns
--test-legalize-mode=full
--test-legalize-mode=analysis
--test-legalize-mode=<value>
--test-lazy-loading
--test-last-modified='interprocedural=false'
--test-last-modified='interprocedural=false
--test-last-modified='assume-func-writes=true'
--test-last-modified
--test-kind=<int>
--test-ir-visitors
--test-interface-pass
--test-int-range-inference
--test-inline
--test-gpu-subgroup-reduce-lowering="expand-to-shuffles"
--test-gpu-subgroup-reduce-lowering
--test-gpu-rewrite
--test-gpu-memory-promotion
--test-generic-ir-visitors-interrupt
--test-generic-ir-visitors
--test-generic-ir-region-visitors-interrupt
--test-generic-ir-block-visitors-interrupt
--test-generalize-tensor-unpack
--test-generalize-tensor-pack
--test-generalize-pad-tensor
--test-function-pass
--test-func-set-type
--test-func-insert-result
--test-func-insert-arg
--test-func-erase-result
--test-func-erase-arg
--test-foo-analysis
--test-fold-into-pack-and-unpack
--test-fold-constant-extract-slice
--test-fold-consecutive-insert-extract-slice
--test-fold-arith-extf-into-vector-contract-patterns
--test-fastest-varying=<long>
--test-extract-fixed-outer-loops='test-outer-loop-sizes=7,4'
--test-extract-fixed-outer-loops='test-outer-loop-sizes=7'
--test-extract-fixed-outer-loops
--test-expand-math
--test-erase-unused-operands-and-results
--test-erase-unnecessary-inputs
--test-emulate-narrow-int="memref-load-bitwidth=8"
--test-emulate-narrow-int="memref-load-bitwidth=32"
--test-emulate-narrow-int="arith-compute-bitwidth=8"
--test-emulate-narrow-int="arith-compute-bitwidth=1
--test-emulate-narrow-int
--test-elements-attr-interface
--test-dynamic-pipeline
--test-drop-redundant-insert-slice-rank-expansion
--test-distinct-attrs
--test-dialect-version=<value>
--test-dialect-conversion-pdll
--test-diagnostic-filter
--test-derived-attr
--test-decompose-call-graph-types
--test-decompose-affine-ops
--test-dead-code-analysis
--test-data-layout-query
--test-create-vector-broadcast
--test-convert-call-op
--test-convergence
--test-control-flow-sink
--test-constant-fold
--test-composite-fixed-point-pass
--test-compose-subview
--test-commutativity-utils
--test-clone
--test-cfg-loop-info
--test-cf-assert
--test-bytecode-roundtrip="test-kind=5"
--test-bytecode-roundtrip="test-kind=4"
--test-bytecode-roundtrip="test-kind=3"
--test-bytecode-roundtrip="test-kind=2"
--test-bytecode-roundtrip="test-kind=1"
--test-bytecode-roundtrip="test-dialect-version=2.0"
--test-bytecode-roundtrip="test-dialect-version=1.2"
--test-bytecode-roundtrip="test-dialect-version=1.2
--test-bytecode-roundtrip
--test-bufferization-analysis-only
--test-bubble-up-extract-slice-op-pattern
--test-block-is-in-loop
--test-arith-emulate-wide-int="widest-int-supported=8"
--test-arith-emulate-wide-int="widest-int-supported=16"
--test-arith-emulate-wide-int="function-prefix=emulate_me_"
--test-arith-emulate-wide-int
--test-analysis-only
--test-alias-analysis-modref
--test-alias-analysis-extending
--test-alias-analysis
--test-affine-walk
--test-affine-reify-value-bounds="use-arith-ops"
--test-affine-reify-value-bounds="reify-to-func-args"
--test-affine-reify-value-bounds="reify-to-func-args
--test-affine-reify-value-bounds
--test-affine-parametric-tile
--test-affine-loop-unswitch
--test-affine-data-copy='memref-filter'
--test-affine-data-copy='for-memref-region'
--test-affine-data-copy
--test-affine-access-analysis
--tensor-bufferize
--task-size=1"
--target-width=<int>
--target-vector-bitwidth=<uint>
--target-type=<string>
--target-rank=<uint>
--tag=<string>
--tag-mem-space=<uint>
--symbol-privatize=exclude="aap"
--symbol-privatize
--symbol-dce
--summary-file=<string>
--subgroup-size=<int>
--strip-debuginfo
--string=<string>
--string-list=<string>
--strictness=<string>
--strict-op-spec-alignment
--streaming-mode=<value>
--stage-sparse-ops
--sroa
--split-input-file
--split-input-file[=<string>]
--split-input-file=";
--split-input-file="//
--split-input-file
--spirv-webgpu-prepare
--spirv-update-vce
--spirv-unify-aliased-resource
--spirv-rewrite-inserts
--spirv-lower-abi-attrs
--spirv-cpu-runner
--spirv-canonicalize-gl
--spirv-attach-target='module=spirv_warm.*
--spirv-attach-target='module=spirv.*
--spirv-attach-target
--speculative-counter-promotion-to-loop
--speculative-counter-promotion-max-exiting=<uint>
--sparsifier="vl=8"
--sparsifier="test-bufferization-analysis-only"
--sparsifier="enable-runtime-library=false
--sparsifier
--sparsification="sparse-emit-strategy=debug-interface"
--sparsification="parallelization-strategy=none"
--sparsification="parallelization-strategy=dense-outer-loop"
--sparsification="parallelization-strategy=dense-any-loop"
--sparsification="parallelization-strategy=any-storage-outer-loop"
--sparsification="parallelization-strategy=any-storage-any-loop"
--sparsification-and-bufferization
--sparsification
--sparse-vectorization="vl=8"
--sparse-vectorization="vl=4
--sparse-vectorization="vl=16"
--sparse-vectorization="vl=16
--sparse-vectorization
--sparse-tensor-conversion
--sparse-tensor-codegen=enable-buffer-initialization=true
--sparse-tensor-codegen
--sparse-storage-specifier-to-llvm
--sparse-reinterpret-map
--sparse-gpu-codegen="num-threads=0"
--sparse-gpu-codegen
--sparse-emit-strategy=<value>
--sparse-buffer-rewrite
--sparse-assembler="direct-out=True"
--sparse-assembler
--source-types=<string>
--snapshot-op-locations='filename=%/t'
--snapshot-op-locations='filename=%/t
--snapshot-op-locations
--slow-mem-space=<uint>
--slicing
--slice-analysis-test
--skip-ret-exit-block
--skip-partial
--skip-non-unit-stride-loops
--simple
--signal-pass-failure
--show-dialects
--shared-libs=%vulkan-runtime-wrappers,%mlir_runner_utils
--shared-libs=%mlir_sycl_runtime
--shared-libs=%mlir_runner_utils,%mlir_test_spirv_cpu_runner_c_wrappers
--shared-libs=%mlir_runner_utils,%mlir_c_runner_utils,%arm_sme_abi_shlib,%mlir_arm_runner_utils
--shared-libs=%mlir_runner_utils,%mlir_c_runner_utils
--shared-libs=%mlir_rocm_runtime
--shared-libs=%mlir_lib_dir/libmlir_c_runner_utils%shlibext
--shared-libs=%mlir_float16_utils
--shared-libs=%mlir_cuda_runtime
--shared-libs=%mlir_c_runner_utils\
--shared-libs=%mlir_c_runner_utils,%mlir_runner_utils
--shared-libs=%mlir_c_runner_utils,%mlir_arm_runner_utils
--shared-libs=%mlir_c_runner_utils
--shared-libs=%mlir_async_runtime\
--shared-libs=%mlir_async_runtime
--shared-libs="%mlir_c_runner_utils,%mlir_runner_utils"
--sharding-propagation
--shape-to-shape-lowering
--shape-bufferize
--set-llvm-module-datalayout='data-layout=p:32:32:32'
--set-llvm-module-datalayout
--serialize-spirv
--separate
--scope=<value>
--scf-parallel-loop-tiling
--scf-parallel-loop-specialization
--scf-parallel-loop-fusion
--scf-for-to-while
--scf-for-loop-specialization
--scf-for-loop-range-folding
--scf-for-loop-peeling=skip-partial=false
--scf-for-loop-peeling=peel-front=true
--scf-for-loop-peeling
--scf-for-loop-canonicalization
--scf-bufferize
--sccp
--saturate-fp8-truncf
--sample-profile-max-propagate-iterations=<uint>
--sample-profile-check-sample-coverage=<N>
--sample-profile-check-record-coverage=<N>
--safepoint-ir-verifier-print-only
--runtime=<value>
--runtime-library=true"
--runtime-library=false"
--runtime-counter-relocation
--run-reproducer
--run-on-parent
--run-on-nested-operations
--rocdl-attach-target='module=rocdl.*
--rocdl-attach-target='module=options.*
--rocdl-attach-target
--rng-seed=<uint>
--rewrite-warp-ops-to-scf-if
--reverse-unroll-order
--resolve-shaped-type-result-dims
--resolve-ranked-shaped-type-result-dims
--remove-shape-constraints
--remove-dead-values
--remove-dead-args-and-results
--reify-to-func-args
--region-simplify
--reduction-tree='traversal-mode=0
--reducer
--reconcile-unrealized-casts
--reconcile-unrealized-casts
--reassociate-fp-reductions
--rank=0"
--query
--propagate-distribution
--promote-single-iter
--promote-buffers-to-stack="max-rank-of-allocated-memref=2"
--promote-buffers-to-stack="max-alloc-size-in-bytes=64"
--promote-buffers-to-stack
--profile=<value>
--profile-correlate=<value>
--profile-actions-to=<string>
--profile-actions-to=-
--private-function-dynamic-ownership
--print-result-types
--print-pipeline-passes
--print-op-stats=json
--print-op-stats
--print-ir
--print-data-flow-edges
--print-control-flow-edges
--print-conflicts
--print-attrs
--prefer-conv2d-kernel-layout-hwcf
--precision=<string>
--pre-sparsification-rewrite
--poison-checking-function-local
--pipeline=<string>
--pgo-view-block-coverage-graph
--pgo-temporal-instrumentation
--pgo-block-coverage
--permutation-map=<uint>
--peeled-loops=<long>
--peel-front
--pass-test
--pass-pipeline=<string>
--pass-pipeline='wrong-op()'
--pass-pipeline='func.func(test-module-pass)'
--pass-pipeline='builtin.module(test-options-pass{enum=invalid})'
--pass-pipeline='builtin.module(test-interface-pass)'
--pass-pipeline='builtin.module(spirv.module(inline{default-pipeline=''}))'
--pass-pipeline='builtin.module(llvm.func(mem2reg{region-simplify=false}))'
--pass-pipeline='builtin.module(llvm.func(canonicalize{test-convergence}))'
--pass-pipeline='builtin.module(gpu.module(strip-debuginfo,convert-gpu-to-rocdl{use-bare-ptr-memref-call-conv=true}),rocdl-attach-target{chip=%chip})'
--pass-pipeline='builtin.module(gpu.module(strip-debuginfo,convert-gpu-to-rocdl),rocdl-attach-target{chip=%chip})'
--pass-pipeline='builtin.module(gpu.module(strip-debuginfo,convert-gpu-to-nvvm,convert-index-to-llvm{index-bitwidth=32},canonicalize,cse))'
--pass-pipeline='builtin.module(gpu.module(strip-debuginfo,convert-gpu-to-nvvm),nvvm-attach-target)'
--pass-pipeline='builtin.module(gpu.module(gpu.func(test-gpu-memory-promotion)))'
--pass-pipeline='builtin.module(func.func(test-stats-pass,test-stats-pass))'
--pass-pipeline='builtin.module(func.func(test-scf-uplift-while-to-for))'
--pass-pipeline='builtin.module(func.func(test-scf-parallel-loop-collapsing{collapsed-indices-1=1}))'
--pass-pipeline='builtin.module(func.func(test-scf-parallel-loop-collapsing{collapsed-indices-0=0,1}))'
--pass-pipeline='builtin.module(func.func(test-scf-parallel-loop-collapsing))'
--pass-pipeline='builtin.module(func.func(test-pass-invalid-parent))'
--pass-pipeline='builtin.module(func.func(test-interface-pass))'
--pass-pipeline='builtin.module(func.func(test-foo-analysis))'
--pass-pipeline='builtin.module(func.func(test-alias-analysis-modref))'
--pass-pipeline='builtin.module(func.func(test-alias-analysis-extending))'
--pass-pipeline='builtin.module(func.func(test-alias-analysis))'
--pass-pipeline='builtin.module(func.func(scf-parallel-loop-tiling{parallel-loop-tile-sizes=1,4}))'
--pass-pipeline='builtin.module(func.func(scf-parallel-loop-tiling{parallel-loop-tile-sizes=0,0}))'
--pass-pipeline='builtin.module(func.func(scf-parallel-loop-fusion))'
--pass-pipeline='builtin.module(func.func(scf-for-to-while))'
--pass-pipeline='builtin.module(func.func(scf-for-loop-range-folding))'
--pass-pipeline='builtin.module(func.func(nvgpu-optimize-shared-memory))'
--pass-pipeline='builtin.module(func.func(mem2reg{region-simplify=false}))'
--pass-pipeline='builtin.module(func.func(mem2reg))'
--pass-pipeline='builtin.module(func.func(cse,test-pass-failure))'
--pass-pipeline='builtin.module(func.func(cse,cse))'
--pass-pipeline='builtin.module(func.func(cse,canonicalize,cse))'
--pass-pipeline='builtin.module(func.func(cse,canonicalize))'
--pass-pipeline='builtin.module(func.func(cse))'
--pass-pipeline='builtin.module(func.func(convert-arith-to-amdgpu{saturate-fp8-truncf=true}))'
--pass-pipeline='builtin.module(func.func(canonicalize{top-down=true}))'
--pass-pipeline='builtin.module(func.func(canonicalize{test-convergence}))'
--pass-pipeline='builtin.module(func.func(canonicalize{region-simplify=false}))'
--pass-pipeline='builtin.module(func.func(canonicalize{enable-patterns=TestRemoveOpWithInnerOps}))'
--pass-pipeline='builtin.module(func.func(canonicalize{disable-patterns=TestRemoveOpWithInnerOps}))'
--pass-pipeline='builtin.module(func.func(canonicalize))'
--pass-pipeline='builtin.module(func.func(affine-loop-fusion{mode=producer}))'
--pass-pipeline='builtin.module(func.func(affine-loop-fusion{fusion-maximal}))'
--pass-pipeline='builtin.module(func.func(affine-loop-fusion))'
--pass-pipeline='builtin.module(builtin.module(test-module-pass{test-option=a}))'
--pass-pipeline='builtin.module(builtin.module(test-module-pass{test-option=3}))'
--pass-pipeline='builtin.module(builtin.module(test-module-pass,func.func(test-function-pass)),func.func(test-function-pass),func.func(cse,canonicalize))'
--pass-pipeline='builtin.module(builtin.module(test-module-pass),any(test-interface-pass),any(test-interface-pass),func.func(test-function-pass),any(canonicalize),func.func(cse))'
--pass-pipeline='builtin.module(builtin.module(test-module-pass))'
--pass-pipeline='builtin.module(builtin.module(test-dynamic-pipeline{dynamic-pipeline=func.func(cse,canonicalize)}))'
--pass-pipeline='builtin.module(builtin.module(func.func(test-stats-pass,test-stats-pass)))'
--pass-pipeline='any(cse)'
--pass-pipeline='any(buffer-deallocation)'
--pass-pipeline='any(,)'
--pass-pipeline=''
--pass-pipeline="builtin.module(transform-interpreter{debug-payload-root-tag=start_here})"
--pass-pipeline="builtin.module(test-transform-dialect-interpreter{transform-library-paths=%p%{fs-sep}include%{fs-sep}test-interpreter-library})"
--pass-pipeline="builtin.module(test-patterns)"
--pass-pipeline="builtin.module(test-lazy-loading{bytecode-version=1})"
--pass-pipeline="builtin.module(test-lazy-loading)"
--pass-pipeline="builtin.module(standalone-switch-bar-foo)"
--pass-pipeline="builtin.module(slice-analysis-test{omit-block-arguments=true})"
--pass-pipeline="builtin.module(mlprogram-pipeline-globals)"
--pass-pipeline="builtin.module(llvm.func(sroa))"
--pass-pipeline="builtin.module(llvm.func(mem2reg{region-simplify=false}))"
--pass-pipeline="builtin.module(llvm.func(mem2reg))"
--pass-pipeline="builtin.module(llvm.func(llvm-type-consistency))"
--pass-pipeline="builtin.module(llvm.func(canonicalize))"
--pass-pipeline="builtin.module(inline)"
--pass-pipeline="builtin.module(gpu.module(strip-debuginfo,convert-gpu-to-nvvm,convert-nvgpu-to-nvvm,affine-expand-index-ops,lower-affine,convert-arith-to-llvm),convert-vector-to-llvm,canonicalize,cse)"
--pass-pipeline="builtin.module(gpu.module(lower-affine))"
--pass-pipeline="builtin.module(func.func(tosa-to-tensor))"
--pass-pipeline="builtin.module(func.func(tosa-to-linalg-named{prefer-conv2d-kernel-layout-hwcf=true}))"
--pass-pipeline="builtin.module(func.func(tosa-to-linalg-named,tosa-to-linalg,tosa-to-arith))"
--pass-pipeline="builtin.module(func.func(tosa-to-linalg-named,cse))"
--pass-pipeline="builtin.module(func.func(tosa-to-linalg-named))"
--pass-pipeline="builtin.module(func.func(tosa-to-linalg))"
--pass-pipeline="builtin.module(func.func(test-stats-pass))"
--pass-pipeline="builtin.module(func.func(test-print-topological-sort))"
--pass-pipeline="builtin.module(func.func(test-print-liveness))"
--pass-pipeline="builtin.module(func.func(test-print-dominance))"
--pass-pipeline="builtin.module(func.func(test-memref-stride-calculation))"
--pass-pipeline="builtin.module(func.func(test-math-polynomial-approximation,convert-arith-to-llvm),convert-vector-to-scf,convert-scf-to-cf,convert-cf-to-llvm,convert-vector-to-llvm,func.func(convert-math-to-llvm),convert-func-to-llvm,reconcile-unrealized-casts)"
--pass-pipeline="builtin.module(func.func(test-matchers))"
--pass-pipeline="builtin.module(func.func(test-match-reduction))"
--pass-pipeline="builtin.module(func.func(test-mapping-to-processing-elements))"
--pass-pipeline="builtin.module(func.func(test-fold-arith-extf-into-vector-contract-patterns,convert-vector-to-gpu{use-nvgpu=true},cse))"
--pass-pipeline="builtin.module(func.func(test-expand-math,convert-arith-to-llvm),convert-vector-to-scf,convert-scf-to-cf,convert-cf-to-llvm,convert-vector-to-llvm,func.func(convert-math-to-llvm),convert-func-to-llvm,reconcile-unrealized-casts)"
--pass-pipeline="builtin.module(func.func(test-diagnostic-filter{filters=mysource1}))"
--pass-pipeline="builtin.module(func.func(test-clone))"
--pass-pipeline="builtin.module(func.func(test-affine-loop-unswitch))"
--pass-pipeline="builtin.module(func.func(sroa))"
--pass-pipeline="builtin.module(func.func(sharding-propagation))"
--pass-pipeline="builtin.module(func.func(sccp))"
--pass-pipeline="builtin.module(func.func(mesh-spmdization,test-constant-fold))"
--pass-pipeline="builtin.module(func.func(linalg-detensorize{aggressive-mode}))"
--pass-pipeline="builtin.module(func.func(linalg-detensorize))"
--pass-pipeline="builtin.module(func.func(convert-vector-to-scf{lower-tensors=true}))"
--pass-pipeline="builtin.module(func.func(convert-vector-to-scf{full-unroll=true},lower-affine,convert-scf-to-cf),convert-vector-to-llvm,finalize-memref-to-llvm,convert-func-to-llvm,reconcile-unrealized-casts)"
--pass-pipeline="builtin.module(func.func(convert-vector-to-scf{full-unroll=true},expand-strided-metadata,lower-affine,convert-arith-to-llvm,convert-scf-to-cf),convert-vector-to-llvm,finalize-memref-to-llvm,convert-func-to-llvm,reconcile-unrealized-casts)"
--pass-pipeline="builtin.module(func.func(convert-vector-to-scf{full-unroll=true}))"
--pass-pipeline="builtin.module(func.func(convert-vector-to-scf,lower-affine,convert-scf-to-cf,memref-expand,arith-expand),convert-vector-to-llvm,finalize-memref-to-llvm,convert-func-to-llvm,reconcile-unrealized-casts)"
--pass-pipeline="builtin.module(func.func(convert-vector-to-scf,lower-affine,convert-scf-to-cf),convert-vector-to-llvm,finalize-memref-to-llvm,convert-func-to-llvm,reconcile-unrealized-casts)"
--pass-pipeline="builtin.module(func.func(convert-vector-to-scf,expand-strided-metadata,lower-affine,convert-arith-to-llvm,convert-scf-to-cf),convert-vector-to-llvm,finalize-memref-to-llvm,convert-func-to-llvm,reconcile-unrealized-casts)"
--pass-pipeline="builtin.module(func.func(convert-vector-to-scf))"
--pass-pipeline="builtin.module(func.func(convert-vector-to-gpu{use-nvgpu=true}))"
--pass-pipeline="builtin.module(func.func(convert-vector-to-gpu),canonicalize)"
--pass-pipeline="builtin.module(func.func(convert-ub-to-llvm))"
--pass-pipeline="builtin.module(func.func(convert-shape-constraints))"
--pass-pipeline="builtin.module(func.func(convert-scf-to-cf,memref-expand,convert-arith-to-llvm),finalize-memref-to-llvm,convert-func-to-llvm,reconcile-unrealized-casts)"
--pass-pipeline="builtin.module(func.func(convert-scf-to-cf,convert-arith-to-llvm),finalize-memref-to-llvm,convert-func-to-llvm{use-bare-ptr-memref-call-conv=1},reconcile-unrealized-casts)"
--pass-pipeline="builtin.module(func.func(convert-scf-to-cf,convert-arith-to-llvm),finalize-memref-to-llvm,convert-func-to-llvm,reconcile-unrealized-casts)"
--pass-pipeline="builtin.module(func.func(convert-scf-to-cf),finalize-memref-to-llvm,func.func(convert-arith-to-llvm),convert-func-to-llvm,reconcile-unrealized-casts)"
--pass-pipeline="builtin.module(func.func(convert-math-to-llvm,convert-arith-to-llvm{index-bitwidth=32}),convert-func-to-llvm{index-bitwidth=32},reconcile-unrealized-casts)"
--pass-pipeline="builtin.module(func.func(convert-math-to-llvm,convert-arith-to-llvm),convert-func-to-llvm,reconcile-unrealized-casts)"
--pass-pipeline="builtin.module(func.func(convert-math-to-llvm))"
--pass-pipeline="builtin.module(func.func(convert-linalg-to-loops,lower-affine,convert-scf-to-cf,convert-arith-to-llvm),convert-vector-to-llvm,finalize-memref-to-llvm,convert-func-to-llvm,reconcile-unrealized-casts)"
--pass-pipeline="builtin.module(func.func(convert-linalg-to-loops,convert-scf-to-cf,convert-arith-to-llvm),finalize-memref-to-llvm,convert-func-to-llvm,reconcile-unrealized-casts)"
--pass-pipeline="builtin.module(func.func(convert-elementwise-to-linalg))"
--pass-pipeline="builtin.module(func.func(convert-complex-to-standard),convert-complex-to-llvm,func.func(convert-math-to-llvm,convert-arith-to-llvm),convert-func-to-llvm,reconcile-unrealized-casts)"
--pass-pipeline="builtin.module(func.func(convert-arith-to-llvm),finalize-memref-to-llvm,convert-func-to-llvm,reconcile-unrealized-casts)"
--pass-pipeline="builtin.module(func.func(convert-arith-to-llvm),convert-func-to-llvm{use-bare-ptr-memref-call-conv=1},reconcile-unrealized-casts)"
--pass-pipeline="builtin.module(func.func(convert-arith-to-llvm),convert-func-to-llvm,reconcile-unrealized-casts)"
--pass-pipeline="builtin.module(func.func(convert-arith-to-llvm))"
--pass-pipeline="builtin.module(func.func(canonicalize,cse),one-shot-bufferize{bufferize-function-boundaries})"
--pass-pipeline="builtin.module(func.func(canonicalize,convert-scf-to-cf),convert-vector-to-llvm,expand-strided-metadata,lower-affine,convert-arith-to-llvm,finalize-memref-to-llvm,convert-func-to-llvm,reconcile-unrealized-casts)"
--pass-pipeline="builtin.module(func.func(canonicalize))"
--pass-pipeline="builtin.module(func.func(bufferization-lower-deallocations))"
--pass-pipeline="builtin.module(func.func(buffer-deallocation-pipeline))"
--pass-pipeline="builtin.module(func.func(arm-neon-2d-to-intr))"
--pass-pipeline="builtin.module(func.func(arith-expand{include-bf16=true},convert-arith-to-llvm),convert-vector-to-llvm,convert-func-to-llvm,reconcile-unrealized-casts)"
--pass-pipeline="builtin.module(finalize-memref-to-llvm{use-generic-functions=1})"
--pass-pipeline="builtin.module(finalize-memref-to-llvm{use-generic-functions=1
--pass-pipeline="builtin.module(ensure-debug-info-scope-on-llvm-func)"
--pass-pipeline="builtin.module(convert-vector-to-llvm,func.func(convert-arith-to-llvm),convert-func-to-llvm,reconcile-unrealized-casts)"
--pass-pipeline="builtin.module(convert-math-to-funcs{min-width-of-fpowi-exponent=33})"
--pass-pipeline="builtin.module(convert-math-to-funcs{convert-ctlz})"
--pass-pipeline="builtin.module(convert-math-to-funcs{convert-ctlz=false})"
--pass-pipeline="builtin.module(convert-math-to-funcs)"
--pass-pipeline="builtin.module(builtin.module(symbol-dce))"
--pass-pipeline="builtin.module(builtin.module(sccp))"
--pass-pipeline="builtin.module(buffer-deallocation-pipeline,convert-bufferization-to-memref,func.func(convert-vector-to-scf,lower-affine,convert-linalg-to-loops))"
--pass-pipeline="builtin.module(buffer-deallocation-pipeline)"
--pass-pipeline="builtin.module(async-to-async-runtime,func.func(async-runtime-ref-counting,async-runtime-ref-counting-opt),convert-async-to-llvm,func.func(convert-linalg-to-loops,convert-scf-to-cf),finalize-memref-to-llvm,func.func(convert-arith-to-llvm),convert-func-to-llvm,reconcile-unrealized-casts)"
--pass-pipeline="builtin.module(async-to-async-runtime,func.func(async-runtime-ref-counting,async-runtime-ref-counting-opt),convert-async-to-llvm,func.func(convert-linalg-to-loops,convert-scf-to-cf),convert-vector-to-llvm,func.func(convert-arith-to-llvm),convert-func-to-llvm,reconcile-unrealized-casts)"
--pass-pipeline="builtin.module(async-to-async-runtime,func.func(async-runtime-ref-counting,async-runtime-ref-counting-opt),convert-async-to-llvm,func.func(convert-arith-to-llvm),convert-vector-to-llvm,finalize-memref-to-llvm,convert-func-to-llvm,reconcile-unrealized-casts)"
--pass-pipeline="builtin.module(async-to-async-runtime,func.func(async-runtime-ref-counting,async-runtime-ref-counting-opt),convert-async-to-llvm,func.func(convert-arith-to-llvm),convert-func-to-llvm,reconcile-unrealized-casts)"
--pass-pipeline="builtin.module(async-func-to-async-runtime,async-to-async-runtime,func.func(async-runtime-ref-counting,async-runtime-ref-counting-opt),convert-async-to-llvm,test-lower-to-llvm)"
--pass-pipeline="builtin.module(any(test-cfg-loop-info))"
--pass-failure=true}))'
--pass-failure=false}))'
--pass-crash))'
--parallelization-strategy=<value>
--parallel-reductions
--parallel-loop-tile-sizes=<long>
--ownership-based-buffer-deallocation=private-function-dynamic-ownership=true
--ownership-based-buffer-deallocation=private-function-dynamic-ownership=false
--ownership-based-buffer-deallocation="private-function-dynamic-ownership=true"
--ownership-based-buffer-deallocation
--output-split-marker=<string>
--output-split-marker=";
--output-split-marker="//
--outline-shape-computation
--opts=<string>
--options-pass{enum=one
--opt-reduction-pass='opt-pass=symbol-dce
--opt-ch4
--opt-ch3
--opt-ch2
--openacc-legalize-data=host-to-device=false
--openacc-legalize-data
--op-stats{
--op-pipelines=<pass-manager>
--op-name=<string>
--only=true'
--only-if-required-by-ops
--one-shot-bufferize=allow-return-allocs-from-loops
--one-shot-bufferize="unknown-type-conversion=identity-layout-map
--one-shot-bufferize="test-analysis-only"
--one-shot-bufferize="test-analysis-only
--one-shot-bufferize="must-infer-memory-space"
--one-shot-bufferize="dialect-filter=tensor,bufferization
--one-shot-bufferize="dialect-filter=scf,bufferization
--one-shot-bufferize="bufferize-function-boundaries=1"
--one-shot-bufferize="bufferize-function-boundaries=1
--one-shot-bufferize="bufferize-function-boundaries"
--one-shot-bufferize="bufferize-function-boundaries
--one-shot-bufferize="allow-unknown-ops"
--one-shot-bufferize="allow-unknown-ops
--one-shot-bufferize="allow-return-allocs-from-loops
--one-shot-bufferize
--on-parent=1
--on-nested-operations=1
--omp-function-filtering--omit-block-arguments
--object-size-offset-visitor-max-visit-instructions=<uint>
--object-filename=%T/test.o
--nvvm-attach-target='module=options.*
--nvvm-attach-target='module=nvvm.*
--nvvm-attach-target="module=main_kernel
--nvvm-attach-target
--nvgpu-optimize-shared-memory
--num-workers=<int>
--num-threads=<uint>
--num-threads=<int>
--normalize-memrefs
--no-min-max-bounds
--no-implicit-module
--no-epilogue-peeling
--no-discriminators
--no-analysis-func-filter=<string>
--name=<string>
--must-infer-memory-space
--multiplier=<uint>
--module=<string>
--mode=<value>
--mlprogram-pipeline-globals
--mlir-to-llvmir
--mlir-to-cpp
--mlir-timing-display=tree
--mlir-timing-display=list
--mlir-timing-display=<value>
--mlir-timing
--mlir-print-value-users
--mlir-print-stacktrace-on-diagnostic
--mlir-print-skip-regions
--mlir-print-op-on-diagnostic
--mlir-print-op-generic
--mlir-print-local-scope
--mlir-print-ir-module-scope
--mlir-print-ir-before=cse
--mlir-print-ir-before=<pass-arg>
--mlir-print-ir-before-all
--mlir-print-ir-after=cse
--mlir-print-ir-after=convert-gpu-to-nvvm
--mlir-print-ir-after=<pass-arg>
--mlir-print-ir-after-failure
--mlir-print-ir-after-change
--mlir-print-ir-after-all
--mlir-print-elementsattrs-with-hex-if-larger=<long>
--mlir-print-elementsattrs-with-hex-if-larger=1
--mlir-print-debuginfo
--mlir-print-debug-counter
--mlir-print-assume-verified
--mlir-pretty-debuginfo
--mlir-pass-statistics-display=pipeline
--mlir-pass-statistics-display=list
--mlir-pass-statistics-display=<value>
--mlir-pass-statistics
--mlir-pass-pipeline-local-reproducer
--mlir-pass-pipeline-crash-reproducer=<string>
--mlir-pass-pipeline-crash-reproducer=%t
--mlir-output-format=json
--mlir-output-format=<value>
--mlir-generate-reproducer=<filename>
--mlir-generate-reproducer=%t
--mlir-enable-debugger-hook
--mlir-elide-resource-strings-if-larger=<uint>
--mlir-elide-resource-strings-if-larger=20
--mlir-elide-elementsattrs-if-larger=<uint>
--mlir-elide-elementsattrs-if-larger=2
--mlir-disable-threading=true
--mlir-disable-threading=false
--mlir-disable-threading
--mlir-debug-counter=unique-tag-for-my-action-skip=-1
--mlir-debug-counter=pass-execution-skip=1
--mlir-debug-counter=<string>
--misexpect-tolerance=<uint>
--mir-strip-debugify-only
--min-width-of-fpowi-exponent=<uint>
--min-task-size=<int>
--min-dma-transfer=<int>
--mesh-spmdization
--memref-load-bitwidth=<uint>
--memref-filter
--memref-expand
--memref-emulate-wide-int="widest-int-supported=32"
--memref-emulate-wide-int
--mem2reg
--max-vector-split-size=<uint>
--max-transfer-write-elements=<uint>
--max-rank-of-allocated-memref=<uint>
--max-num-rewrites=<long>
--max-nested=<uint>
--max-label-len=<uint>
--max-iterations=<uint>
--max-iterations=<long>
--max-iterations=<int>
--max-counter-promotions=<int>
--max-counter-promotions-per-loop=<uint>
--max-alloc-size-in-bytes=<uint>
--mattr=+sve,+sme
--mattr=+sve
--mattr=+foo_bar
--mattr="avx512f"
--mattr="avx512bw,avx512vp2intersect"
--mattr="avx512bw"
--mattr="avx"
--mattr="+sve,+sme"
--mattr="+sve"
--mattr="+amx-tile,+amx-int8,+amx-bf16"
--matrix-print-after-transpose-opt
--matrix-default-layout=row-major
--matrix-default-layout=column-major
--matrix-default-layout=<value>
--matrix-allow-contract
--math-uplift-to-fma
--math-to-funcs{convert-ctlz},
--math-to-funcs,
--math-legalize-to-f32
--march=bar_foo
--march=aarch64
--map-memref-spirv-storage-class='client-api=vulkan'
--map-memref-spirv-storage-class='client-api=opencl'
--map-memref-spirv-storage-class
--lowering-strategy=<value>
--lower-vector-multi-reduction="lowering-strategy=inner-reduction"
--lower-vector-multi-reduction="lowering-strategy=inner-parallel"
--lower-vector-multi-reduction
--lower-vector-mask
--lower-tensors
--lower-sparse-ops-to-foreach="enable-runtime-library=true
--lower-sparse-ops-to-foreach="enable-runtime-library=false
--lower-sparse-ops-to-foreach
--lower-sparse-foreach-to-scf
--lower-host-to-llvm
--lower-allow-check-random-rate=<number>
--lower-allow-check-percentile-cutoff-hot=<int>
--lower-affine
--loop-type=<string>
--loop-invariant-subset-hoisting
--loop-invariant-code-motion
--loop-depth=<uint>
--log-mlir-actions-filter=<string>
--log-mlir-actions-filter=%s:8
--log-mlir-actions-filter=%s:4,%s:12
--log-mlir-actions-filter=%s:1
--log-mlir-actions-filter=%s
--log-actions-to=<string>
--log-actions-to=-
--load-pass-plugin=<string>
--load-pass-plugin=%standalone_libs/StandalonePlugin%shlibext
--load-dialect-plugin=<string>
--load-dialect-plugin=%standalone_libs/StandalonePlugin%shlibext
--llvm-type-consistency
--llvm-request-c-wrappers
--llvm-optimize-for-nvvm-target
--llvm-legalize-for-export
--llvm-add-comdats
--list=d
--list=b,c
--list=a,b
--list=<int>
--lint-abort-on-error
--linalg-named-op-conversion
--linalg-inline-scalar-operands
--linalg-generalize-named-ops
--linalg-fuse-elementwise-ops
--linalg-fold-unit-extent-dims="use-rank-reducing-slices"
--linalg-fold-unit-extent-dims
--linalg-detensorize
--linalg-bufferize
--lift-cf-to-scf
--level=<value>
--launch-func-to-vulkan
--label=<string>
--json
--iterative-counter-promotion
--irdl-file=<filename>
--interprocedural
--internalize-public-api-list=<list>
--internalize-public-api-file=<filename>
--int-range-optimizations
--int-bitwidths-supported=<uint>
--instrprof-atomic-counter-update-all
--instcombine-negator-max-depth=<uint>
--instcombine-negator-enabled
--instcombine-maxarray-size=<uint>
--instcombine-max-sink-users=<uint>
--instcombine-max-num-phis=<uint>
--instcombine-guard-widening-window=<uint>
--instcombine-code-sinking
--inlining-threshold=<uint>
--inline='op-pipelines=func.func(canonicalize,cse)'
--inline='default-pipeline='''
--inline="default-pipeline=''"
--inline
--indices-2=2},
--indices-1=1,4
--index-bitwidth=<uint>
--include-bf16
--include-apply-rescale
--import-llvm
--import-all-index
--hwasan-random-rate=<number>
--hwasan-percentile-cutoff-hot=<int>
--hot-cold-split
--host-to-device
--hoist-uniform
--help-list
--help-hidden
--help
--hash-based-counter-split
--has-redux
--handler=<value>
--gpu-triple=<string>
--gpu-to-llvm=use-bare-pointers-for-kernels=true
--gpu-to-llvm="use-bare-pointers-for-kernels=1"
--gpu-to-llvm="gpu-binary-annotation=rocdl.hsaco"
--gpu-to-llvm="gpu-binary-annotation=nvvm.cubin"
--gpu-to-llvm
--gpu-thread-dims=<uint>
--gpu-module-to-binary=format=%gpu_compilation_format
--gpu-module-to-binary="format=llvm"
--gpu-module-to-binary="format=isa"
--gpu-module-to-binary="format=%gpu_compilation_format"
--gpu-module-to-binary
--gpu-map-parallel-loops
--gpu-lower-to-nvvm-pipeline="kernel-bare-ptr-calling-convention=1
--gpu-lower-to-nvvm-pipeline="host-bare-ptr-calling-convention=1
--gpu-lower-to-nvvm-pipeline="cubin-format=isa"
--gpu-lower-to-nvvm-pipeline="cubin-format=%gpu_compilation_format"
--gpu-lower-to-nvvm-pipeline="cubin-chip=sm_90a
--gpu-lower-to-nvvm-pipeline="cubin-chip=sm_90
--gpu-lower-to-nvvm-pipeline="cubin-chip=sm_80
--gpu-lower-to-nvvm-pipeline="cubin-chip=sm_70
--gpu-launch-sink-index-computations
--gpu-kernel-outlining=data-layout-str='#dlti.dl_spec<#dlti.dl_entry<index,32:i32>>'
--gpu-kernel-outlining
--gpu-format=<string>
--gpu-features=<string>
--gpu-eliminate-barriers
--gpu-decompose-memrefs
--gpu-chip=<string>
--gpu-block-dims=<uint>
--gpu-binary-annotation=<string>
--gpu-async-region
--generate-runtime-verification
--generate-merged-base-profiles
--generate-dma
--fusion-maximal
--fusion-local-buf-threshold=<ulong>
--fusion-fast-mem-space=<uint>
--fusion-compute-tolerance=<number>
--fuse-with-reshape-by-expansion
--fuse-with-reshape-by-collapsing-control
--fuse-with-reshape-by-collapsing
--fuse-outer-products
--fuse-multiuse-producer
--fuse-generic-ops-control
--fuse-generic-ops
--function-prefix=<string>
--function-pass,
--function-boundary-type-conversion=<string>
--func-writes=true'
--func-reads=true'
--func-bufferize
--full-unroll
--ftz
--fs-profile-debug-prob-diff-threshold=<uint>
--fs-profile-debug-bw-threshold=<uint>
--forward-slicing
--format=<string>
--form-expressions
--force-tail-folding-style=<value>
--force-create-check
--force-32bit-vector-indices
--for-memref-region
--fold-tensor-subset-ops
--fold-memref-alias-ops
--finite-only
--finalizing-bufferize
--finalize-memref-to-llvm\
--finalize-memref-to-llvm='use-aligned-alloc=1'
--finalize-memref-to-llvm='index-bitwidth=32'
--finalize-memref-to-llvm
--filters=<string>
--filter-dialects=<string>
--filename=<string>
--features=<string>
--fast-mem-space=<uint>
--fast-mem-capacity=<ulong>
--fast
--exts=<string>
--experimental-debuginfo-iterators
--experimental-debug-variable-locations
--expand-to-shuffles
--expand-strided-metadata
--expand-realloc=emit-deallocs=false
--expand-realloc="emit-deallocs=false"
--expand-realloc
--exclude=<string>
--enum=<value>
--entry-point=<string>
--entry-point-result=void
--entry-point-result=i64
--entry-point-result=i32
--entry-function=entry
--ensure-debug-info-scope-on-llvm-func
--enforce-single-top-level-transform-op
--enable-x86vector
--enable-vtable-value-profiling
--enable-vla-vectorization
--enable-split-loopiv-heuristic
--enable-split-backedge-in-load-pre
--enable-simd-index32
--enable-runtime-library
--enable-pgo-force-function-attrs
--enable-patterns=<string>
--enable-name-compression
--enable-matrix
--enable-loop-simplifycfg-term-folding
--enable-load-pre
--enable-load-in-loop-pre
--enable-jump-table-to-switch
--enable-index-optimizations
--enable-gvn-sink
--enable-gvn-memdep
--enable-gvn-hoist
--enable-gpu-libgen
--enable-expensive-checks
--enable-convert
--enable-buffer-initialization
--enable-avx2
--enable-arm-sve
--enable-arm-streaming=za-mode=preserves-za
--enable-arm-streaming=za-mode=out-za
--enable-arm-streaming=za-mode=new-za
--enable-arm-streaming=za-mode=inout-za
--enable-arm-streaming=za-mode=in-za
--enable-arm-streaming=streaming-mode=streaming-locally
--enable-arm-streaming=streaming-mode=streaming-compatible
--enable-arm-streaming=only-if-required-by-ops
--enable-arm-streaming="streaming-mode=streaming-locally
--enable-arm-streaming
--enable-arm-neon
--enable-amx
--emulate-lt-32-bit-scalar-types
--empty-tensor-to-alloc-tensor
--emit=mlir-affine
--emit=llvm
--emit-invalid-ir
--emit-deallocs
--emit-bytecode-version=<value>
--eliminate-empty-tensors
--elide-resource-data-from-bytecode
--e=entry
--dynamic-pipeline=<string>
--duplicate-function-elimination
--dump-pass-pipeline
--dump-object-file
--dump-alias-sets
--drop-equivalent-buffer-results
--dot-cfg-mssa=<file
--do-counter-promotion
--dlopen=%mlir_native_utils_lib_dir/libmlir_c_runner_utils%shlibext
--dlopen=%mlir_c_runner_utils
--distribute-transfer-write
--disable-tosa-decompositions
--disable-patterns=<string>
--disable-i2p-p2i-opt
--disable-expensive-checks
--disable-auto-upgrade-debug-info
--direct-out
--dialect-filter=<string>
--device_type=<string>
--device_id=<uint>
--deserialize-spirv
--depth=1'
--depth=0'
--default-pipeline=<string>
--decorate-spirv-composite-type-layout
--declare-variables-at-top
--debugify-quiet
--debugify-level=<value>
--debugify-func-limit=<ulong>
--debug-transform-root-tag=<string>
--debug-payload-root-tag=<string>
--debug-only=transform-dialect-dump-repro
--debug-only=serialize-to-isa
--debug-only=jit-runner
--debug-info-correlate
--debug-bind-trailing-args=<string>
--daz
--data-layout=<string>
--data-layout-str=<string>
--cse
--create-sparse-deallocs
--cost-kind=<value>
--correct-sqrt
--copy-before-write
--convert-vector-to-spirv
--convert-vector-to-scf=full-unroll
--convert-vector-to-scf='full-unroll=true'
--convert-vector-to-scf
--convert-vector-to-llvm='reassociate-fp-reductions'
--convert-vector-to-llvm='force-32bit-vector-indices=1'
--convert-vector-to-llvm='force-32bit-vector-indices=0'
--convert-vector-to-llvm="enable-x86vector"
--convert-vector-to-llvm="enable-arm-sve"
--convert-vector-to-llvm="enable-amx"
--convert-vector-to-llvm
--convert-vector-to-gpu
--convert-vector-to-arm-sme
--convert-ub-to-spirv
--convert-ub-to-llvm
--convert-tuple-ops
--convert-to-llvm="filter-dialects=ub"
--convert-to-llvm="filter-dialects=memref"
--convert-to-llvm="filter-dialects=math"
--convert-to-llvm="filter-dialects=index"
--convert-to-llvm="filter-dialects=complex"
--convert-to-llvm="filter-dialects=cf"
--convert-to-llvm="filter-dialects=arith,cf,func,math"
--convert-to-llvm="filter-dialects=arith"
--convert-to-llvm
--convert-tensor-to-spirv
--convert-tensor-to-linalg
--convert-spirv-to-llvm='client-api=WebGPU'
--convert-spirv-to-llvm='client-api=Vulkan'
--convert-spirv-to-llvm='client-api=OpenCL'
--convert-spirv-to-llvm='client-api=Metal'
--convert-spirv-to-llvm
--convert-shape-to-std
--convert-shape-constraints
--convert-scf-to-spirv
--convert-scf-to-openmp='num-threads=4'
--convert-scf-to-openmp
--convert-scf-to-emitc
--convert-scf-to-cf
--convert-scf-ops
--convert-pdl-to-pdl-interp
--convert-parallel-loops-to-gpu
--convert-openmp-to-llvm
--convert-openacc-to-scf
--convert-nvvm-to-llvm
--convert-nvgpu-to-nvvm
--convert-memref-to-spirv="bool-num-bits=8"
--convert-memref-to-spirv="bool-num-bits=8
--convert-memref-to-spirv
--convert-memref-to-emitc
--convert-math-to-spirv
--convert-math-to-llvm
--convert-math-to-libm
--convert-math-to-funcs
--convert-linalg-to-std
--convert-linalg-to-parallel-loops
--convert-linalg-to-loops
--convert-linalg-to-affine-loops
--convert-index-to-spirv=use-64bit-index=true
--convert-index-to-spirv=use-64bit-index=false
--convert-index-to-spirv
--convert-index-to-llvm=index-bitwidth=64
--convert-index-to-llvm=index-bitwidth=32
--convert-index-to-llvm
--convert-gpu-to-spirv="use-64bit-index=true"
--convert-gpu-to-spirv="use-64bit-index=false"
--convert-gpu-to-spirv
--convert-gpu-to-rocdl='use-bare-ptr-memref-call-conv=true'
--convert-gpu-to-rocdl='use-bare-ptr-memref-call-conv=1'
--convert-gpu-to-rocdl='use-bare-ptr-memref-call-conv=0'
--convert-gpu-to-rocdl='runtime=OpenCL'
--convert-gpu-to-rocdl='runtime=HIP'
--convert-gpu-to-rocdl='index-bitwidth=32'
--convert-gpu-to-rocdl
--convert-gpu-to-nvvm='use-bare-ptr-memref-call-conv=1'
--convert-gpu-to-nvvm='use-bare-ptr-memref-call-conv=0'
--convert-gpu-to-nvvm='index-bitwidth=32'
--convert-gpu-to-nvvm='has-redux=1'
--convert-gpu-to-nvvm="index-bitwidth=32"
--convert-gpu-to-nvvm
--convert-gpu-launch-to-vulkan-launch
--convert-func-to-spirv="emulate-lt-32-bit-scalar-types=false"
--convert-func-to-spirv
--convert-func-to-llvm='use-bare-ptr-memref-call-conv=1'
--convert-func-to-llvm
--convert-func-to-emitc
--convert-func-ops
--convert-elementwise-to-linalg
--convert-ctlz
--convert-complex-to-standard
--convert-complex-to-spirv
--convert-complex-to-llvm
--convert-complex-to-libm
--convert-cf-to-spirv
--convert-cf-to-llvm
--convert-bufferization-to-memref
--convert-async-to-llvm
--convert-arm-sme-to-scf
--convert-arm-sme-to-llvm
--convert-arith-to-spirv
--convert-arith-to-llvm
--convert-arith-to-emitc
--convert-arith-to-arm-sme
--convert-arith-to-amdgpu
--convert-amdgpu-to-rocdl=chipset=gfx940
--convert-amdgpu-to-rocdl=chipset=gfx90a
--convert-amdgpu-to-rocdl=chipset=gfx908
--convert-amdgpu-to-rocdl=chipset=gfx1100
--convert-amdgpu-to-rocdl=chipset=gfx1030
--convert-amdgpu-to-rocdl
--convert-affine-for-to-gpu
--control-fusion-by-expansion
--control-flow-sink
--control-flow-edges=true'
--composite-fixed-point-pass='name=TestCompositePass
--composite-fixed-point-pass
--compose-maps
--color
--collapsed-indices-2=<uint>
--collapsed-indices-1=<uint>
--collapsed-indices-0=<uint>
--collapse-dimensions-control=<long>
--clone-ops-with-operands
--clone-ops-with-no-operands
--client_api=<string>
--client-api=<value>
--client-api=<string>
--cleanup-unroll
--chipset=<string>
--chip=<string>
--ch7
--ch6
--ch5
--cfg-hide-unreachable-paths
--cfg-hide-deoptimize-paths
--cfg-hide-cold-paths=<number>
--caps=<string>
--canonicalize="test-convergence"
--canonicalize="test-convergence
--canonicalize
--cache-size=<ulong>
--c
--bytecode-version=<int>
--bufferize-function-boundaries
--bufferization-lower-deallocations
--bufferization-bufferize
--buffer-results-to-out-params
--buffer-loop-hoisting
--buffer-hoisting
--buffer-deallocation-simplification
--buffer-deallocation-pipeline=private-function-dynamic-ownership
--buffer-deallocation-pipeline
--buffer-deallocation
--bounds-checking-unique-traps
--bounds-checking-single-trap
--bool-num-bits=<int>
--bind-second-extra-to-results-of-ops=<string>
--bind-second-extra-to-params=<int>
--bind-second-extra-to-ops=<string>
--bind-first-extra-to-results-of-ops=<string>
--bind-first-extra-to-params=<int>
--bind-first-extra-to-ops=<string>
--backward-slicing
--atomic-first-counter
--atomic-counter-update-promoted
--async-to-async-runtime
--async-runtime-ref-counting-opt
--async-runtime-ref-counting
--async-runtime-policy-based-ref-counting
--async-parallel-for=num-workers=-1
--async-parallel-for=async-dispatch=true
--async-parallel-for=async-dispatch=false
--async-parallel-for="async-dispatch=false
--async-parallel-for
--async-func-to-async-runtime
--async-dispatch
--assume-func-writes
--assume-func-reads
--arm-sve-legalize-vector-storage
--arm-sme-vector-legalization
--arm-sme-outer-product-fusion
--arm-neon-2d-to-intr
--arith-unsigned-when-equivalent
--arith-int-narrowing="int-bitwidths-supported=1,8,16,32"
--arith-int-narrowing="int-bitwidths-supported=1,8,16,24,32"
--arith-int-narrowing="int-bitwidths-supported=0"
--arith-int-narrowing
--arith-expand="include-bf16=true"
--arith-expand
--arith-emulate-wide-int="widest-int-supported=512"
--arith-emulate-wide-int="widest-int-supported=32"
--arith-emulate-wide-int
--arith-emulate-unsupported-floats="source-types=bf16,f8E4M3FNUZ
--arith-emulate-unsupported-floats
--arith-compute-bitwidth=<uint>
--arith-bufferize=alignment=64
--arith-bufferize
--approximate-log1p
--annotate
--analysis-heuristic=<string>
--analysis-fuzzer-seed=<uint>
--amdgpu-emulate-atomics=chipset=gfx90a
--amdgpu-emulate-atomics=chipset=gfx1030
--amdgpu-emulate-atomics
--allow-unregistered-dialect
--allow-unknown-ops
--allow-return-allocs-from-loops
--allow-multiple-uses
--allocate-arm-sme-tiles
--alignment=<uint>
--aggressive-reduce-constant
--aggressive-mode
--affine-super-vectorizer-test=vectorize-affine-loop-nest
--affine-super-vectorizer-test=compose-maps
--affine-super-vectorizer-test="vector-shape-ratio=4,8"
--affine-super-vectorizer-test="vector-shape-ratio=2,5,2"
--affine-super-vectorizer-test="slicing=true"
--affine-super-vectorizer-test="forward-slicing=true"
--affine-super-vectorizer-test="backward-slicing=true"
--affine-super-vectorizer-test
--affine-super-vectorize=virtual-vector-size=0
--affine-super-vectorize="virtual-vector-size=8
--affine-super-vectorize="virtual-vector-size=4,8"
--affine-super-vectorize="virtual-vector-size=32,64,256
--affine-super-vectorize="virtual-vector-size=32,256
--affine-super-vectorize="virtual-vector-size=128"
--affine-super-vectorize="virtual-vector-size=128
--affine-super-vectorize
--affine-simplify-structures
--affine-scalrep
--affine-pipeline-data-transfer
--affine-parallelize='parallel-reductions=1'
--affine-parallelize='max-nested=1'
--affine-parallelize
--affine-loop-unroll='unroll-factor=6
--affine-loop-unroll='unroll-factor=5
--affine-loop-unroll="unroll-full"
--affine-loop-unroll="unroll-full
--affine-loop-unroll="unroll-factor=5
--affine-loop-unroll="unroll-factor=4"
--affine-loop-unroll="unroll-factor=1"
--affine-loop-unroll-jam="unroll-jam-factor=4"
--affine-loop-unroll-jam="unroll-jam-factor=2"
--affine-loop-unroll-jam
--affine-loop-unroll
--affine-loop-tile="tile-size=32"
--affine-loop-tile="tile-size=32
--affine-loop-tile="cache-size=512"
--affine-loop-tile
--affine-loop-normalize='promote-single-iter=1'
--affine-loop-normalize
--affine-loop-invariant-code-motion
--affine-loop-fusion
--affine-loop-coalescing
--affine-expand-index-ops
--affine-data-copy-generate="generate-dma=false
--affine-data-copy-generate="generate-dma
--affine-data-copy-generate
--add-result-attr
--abort-on-max-devirt-iterations-reached