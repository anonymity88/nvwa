memref.dim (memref::DimOp) ¶
Dimension index operation

Syntax:

operation ::= `memref.dim` attr-dict $source `,` $index `:` type($source)
The dim operation takes a memref and a dimension operand of type index. It returns the size of the requested dimension of the given memref. If the dimension index is out of bounds the behavior is undefined.

The specified memref type is that of the first operand.

Example:

// Always returns 4, can be constant folded:
%c0 = arith.constant 0 : index
%x = memref.dim %A, %c0 : memref<4 x ? x f32>

// Returns the dynamic dimension of %A.
%c1 = arith.constant 1 : index
%y = memref.dim %A, %c1 : memref<4 x ? x f32>

// Equivalent generic form:
%x = "memref.dim"(%A, %c0) : (memref<4 x ? x f32>, index) -> index
%y = "memref.dim"(%A, %c1) : (memref<4 x ? x f32>, index) -> index
Traits: MemRefsNormalizable

Interfaces: ConditionallySpeculatable, InferTypeOpInterface, NoMemoryEffect (MemoryEffectOpInterface), OpAsmOpInterface, ShapedDimOpInterface

Effects: MemoryEffects::Effect{}

Operands: ¶
Operand	Description
source	unranked.memref of any type values or non-0-ranked.memref of any type values
index	index
Results: ¶
Result	Description
result	index