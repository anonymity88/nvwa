memref.extract_aligned_pointer_as_index (memref::ExtractAlignedPointerAsIndexOp) ¶
Extracts a memref’s underlying aligned pointer as an index

Syntax:

operation ::= `memref.extract_aligned_pointer_as_index` $source `:` type($source) `->` type(results) attr-dict
Extracts the underlying aligned pointer as an index.

This operation is useful for lowering to lower-level dialects while still avoiding the need to define a pointer type in higher-level dialects such as the memref dialect.

This operation is intended solely as step during lowering, it has no side effects. A reverse operation that creates a memref from an index interpreted as a pointer is explicitly discouraged.

Example:

  %0 = memref.extract_aligned_pointer_as_index %arg : memref<4x4xf32> -> index
  %1 = arith.index_cast %0 : index to i64
  %2 = llvm.inttoptr %1 : i64 to !llvm.ptr
  call @foo(%2) : (!llvm.ptr) ->()
Traits: AlwaysSpeculatableImplTrait, SameVariadicResultSize

Interfaces: ConditionallySpeculatable, InferTypeOpInterface, NoMemoryEffect (MemoryEffectOpInterface), OpAsmOpInterface

Effects: MemoryEffects::Effect{}

Operands: ¶
Operand	Description
source	ranked or unranked memref of any type values
Results: ¶
Result	Description
aligned_pointer	index