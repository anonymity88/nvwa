func.call (func::CallOp) ¶
Call operation

Syntax:

operation ::= `func.call` $callee `(` $operands `)` attr-dict `:` functional-type($operands, results)
The func.call operation represents a direct call to a function that is within the same symbol scope as the call. The operands and result types of the call must match the specified function type. The callee is encoded as a symbol reference attribute named “callee”.

Example:

%2 = func.call @my_add(%0, %1) : (f32, f32) -> f32
Traits: MemRefsNormalizable

Interfaces: CallOpInterface, SymbolUserOpInterface

Attributes: ¶
Attribute	MLIR Type	Description
callee	::mlir::FlatSymbolRefAttr	flat symbol reference attribute
Operands: ¶
Operand	Description
operands	variadic of any type
Results: ¶
Result	Description
«unnamed»	variadic of any type