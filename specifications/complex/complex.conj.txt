complex.conj (complex::ConjOp) ¶
Calculate the complex conjugate

Syntax:

operation ::= `complex.conj` $complex (`fastmath` `` $fastmath^)? attr-dict `:` type($complex)
The conj op takes a single complex number and computes the complex conjugate.

Example:

%a = complex.conj %b: complex<f32>
Traits: AlwaysSpeculatableImplTrait, Elementwise, SameOperandsAndResultType

Interfaces: ArithFastMathInterface, ConditionallySpeculatable, InferTypeOpInterface, NoMemoryEffect (MemoryEffectOpInterface)

Effects: MemoryEffects::Effect{}

Attributes: ¶
Attribute	MLIR Type	Description
fastmath	::mlir::arith::FastMathFlagsAttr	
Floating point fast math flags
Operands: ¶
Operand	Description
complex	complex type with floating-point elements
Results: ¶
Result	Description
result	complex type with floating-point elements