omp.sections (omp::SectionsOp) ¶
Sections construct

Syntax:

operation ::= `omp.sections` oilist(
              `allocate` `(`
              custom<AllocateAndAllocator>($allocate_vars, type($allocate_vars),
              $allocator_vars, type($allocator_vars)) `)`
              |
              `nowait` $nowait
              )
              custom<PrivateReductionRegion>($region, $private_vars, type($private_vars),
              $private_syms, $reduction_vars, type($reduction_vars), $reduction_byref,
              $reduction_syms) attr-dict
The sections construct is a non-iterative worksharing construct that contains omp.section operations. The omp.section operations are to be distributed among and executed by the threads in a team. Each omp.section is executed once by one of the threads in the team in the context of its implicit task. Block arguments for reduction variables should be mirrored in enclosed omp.section operations.

The allocator_vars and allocate_vars parameters are a variadic list of values that specify the memory allocator to be used to obtain storage for private values.

The optional nowait attribute, when present, eliminates the implicit barrier at the end of the construct, so the parent operation can make progress even if the child operation has not completed yet.

Reductions can be performed by specifying reduction accumulator variables in reduction_vars, symbols referring to reduction declarations in the reduction_syms attribute, and whether the reduction variable should be passed into the reduction region by value or by reference in reduction_byref. Each reduction is identified by the accumulator it uses and accumulators must not be repeated in the same reduction. A private variable corresponding to the accumulator is used in place of the accumulator inside the body of the operation. The reduction declaration specifies how to combine the values from each iteration, section, team, thread or simd lane defined by the operation’s region into the final value, which is available in the accumulator after they all complete.

Traits: AttrSizedOperandSegments

Interfaces: BlockArgOpenMPOpInterface, ReductionClauseInterface

Attributes: ¶
Attribute	MLIR Type	Description
nowait	::mlir::UnitAttr	unit attribute
private_syms	::mlir::ArrayAttr	symbol ref array attribute
reduction_byref	::mlir::DenseBoolArrayAttr	i1 dense array attribute
reduction_syms	::mlir::ArrayAttr	symbol ref array attribute
Operands: ¶
Operand	Description
allocate_vars	variadic of any type
allocator_vars	variadic of any type
private_vars	variadic of any type
reduction_vars	variadic of OpenMP-compatible variable type