transform.structured.match (transform::MatchOp) ¶
Syntax:

operation ::= `transform.structured.match` (`ops` `{` $ops^ `}`)?
              (`interface` `{` $interface^ `}`)?
              (`attributes` $op_attrs^)?
              (`filter_result_type` `=` $filter_result_type^)?
              (`filter_operand_types` `=` $filter_operand_types^)?
              `in` $target attr-dict
              `:` functional-type($target, results)
Match op with the specified constraints, within the target op.

The following constraints are supported:

interface: an optional MatchInterfaceEnum specifying an enum representation for an interface to target.
ops: an optional StrArrayAttr specifying the concrete name of an op. Multiple names can be specified. Matched ops must have one of specified names.
attribute: the matched op must have all specified attributes (with their specified values).
filter_result_type: the matched op must return exactly this one type.
filter_operand_types: all the operands of the matched op must must be of this type. If more than a type is specified, then the length of the list must be equal to the number of operands in the matched op, and the match will succeed only if the operand types match all the types in the list in the order in which they are specified.
Note: Only ops that satisfy all specified constraints are matched.

TODO: Extend with regions to allow a limited form of constraints.

Return modes ¶
This op traverses the ops nested under target and returns the handles to all the operations that match the requirements.

This op fails if the target is not a handle to exactly one operation. Otherwise it succeeds.

This operation does not consume the target handle and produces new handles: it is a navigation op.

Traits: NavigationTransformOpTrait

Interfaces: MemoryEffectsOpInterface, TransformOpInterface

Attributes: ¶
Attribute	MLIR Type	Description
ops	::mlir::ArrayAttr	string array attribute
interface	mlir::transform::MatchInterfaceEnumAttr	
An interface to match
op_attrs	::mlir::DictionaryAttr	dictionary of named attribute values
filter_result_type	::mlir::TypeAttr	any type attribute
filter_operand_types	::mlir::ArrayAttr	type array attribute
Operands: ¶
Operand	Description
target	TransformHandleTypeInterface instance
Results: ¶
Result	Description
results	TransformHandleTypeInterface instance