affine.load (affine::AffineLoadOp) ¶
Affine load operation

Syntax:

operation ::= ssa-id `=` `affine.load` ssa-use `[` multi-dim-affine-map-of-ssa-ids `]` `:` memref-type
The affine.load op reads an element from a memref, where the index for each memref dimension is an affine expression of loop induction variables and symbols. The output of affine.load is a new value with the same type as the elements of the memref. An affine expression of loop IVs and symbols must be specified for each dimension of the memref. The keyword symbol can be used to indicate SSA identifiers which are symbolic.

Example 1:

%1 = affine.load %0[%i0 + 3, %i1 + 7] : memref<100x100xf32>
Example 2: Uses symbol keyword for symbols %n and %m.

%1 = affine.load %0[%i0 + symbol(%n), %i1 + symbol(%m)] : memref<100x100xf32>
Traits: MemRefsNormalizable

Interfaces: AffineMapAccessInterface, AffineReadOpInterface

Attributes: ¶
Attribute	MLIR Type	Description
map	::mlir::AffineMapAttr	AffineMap attribute
Operands: ¶
Operand	Description
memref	memref of any type values
indices	variadic of index
Results: ¶
Result	Description
result	any type