affine.delinearize_index (affine::AffineDelinearizeIndexOp) ¶
Delinearize an index

Syntax:

operation ::= `affine.delinearize_index` $linear_index `into` ` ` `(` $basis `)` attr-dict `:` type($multi_index)
The affine.delinearize_index operation takes a single index value and calculates the multi-index according to the given basis.

Example:

%indices:3 = affine.delinearize_index %linear_index into (%c16, %c224, %c224) : index, index, index
In the above example, %indices:3 conceptually holds the following:

#map0 = affine_map<()[s0] -> (s0 floordiv 50176)>
#map1 = affine_map<()[s0] -> ((s0 mod 50176) floordiv 224)>
#map2 = affine_map<()[s0] -> (s0 mod 224)>
%indices_0 = affine.apply #map0()[%linear_index]
%indices_1 = affine.apply #map1()[%linear_index]
%indices_2 = affine.apply #map2()[%linear_index]
Traits: AlwaysSpeculatableImplTrait

Interfaces: ConditionallySpeculatable, InferTypeOpInterface, NoMemoryEffect (MemoryEffectOpInterface)

Effects: MemoryEffects::Effect{}

Operands: ¶
Operand	Description
linear_index	index
basis	variadic of index
Results: ¶
Result	Description
multi_index	variadic of index