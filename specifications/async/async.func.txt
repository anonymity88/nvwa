async.func (async::FuncOp) ¶
Async function operation

An async function is like a normal function, but supports non-blocking await. Internally, async function is lowered to the LLVM coroutinue with async runtime intrinsic. It can return an async token and/or async values. The token represents the execution state of async function and can be used when users want to express dependencies on some side effects, e.g., the token becomes available once every thing in the func body is executed.

Example:

// Async function can't return void, it always must be some async thing.
async.func @async.0() -> !async.token {
  return
}

// Function returns only async value.
async.func @async.1() -> !async.value<i32> {
  %0 = arith.constant 42 : i32
  return %0 : i32
}

// Implicit token can be added to return types.
async.func @async.2() -> !async.token, !async.value<i32> {
  %0 = arith.constant 42 : i32
  return %0 : i32
}
Traits: IsolatedFromAbove

Interfaces: CallableOpInterface, FunctionOpInterface, OpAsmOpInterface, Symbol

Attributes: ¶
Attribute	MLIR Type	Description
sym_name	::mlir::StringAttr	string attribute
function_type	::mlir::TypeAttr	type attribute of function type
sym_visibility	::mlir::StringAttr	string attribute
arg_attrs	::mlir::ArrayAttr	Array of dictionary attributes
res_attrs	::mlir::ArrayAttr	Array of dictionary attributes