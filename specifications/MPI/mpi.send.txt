//===----------------------------------------------------------------------===//
// SendOp
//===----------------------------------------------------------------------===//

def MPI_SendOp : MPI_Op<"send", []> {
  let summary =
      "Equivalent to `MPI_Send(ptr, size, dtype, dest, tag, MPI_COMM_WORLD)`";
  let description = [{
    MPI_Send performs a blocking send of `size` elements of type `dtype` to rank
    `dest`. The `tag` value and communicator enables the library to determine 
    the matching of multiple sends and receives between the same ranks.

    Communicators other than `MPI_COMM_WORLD` are not supprted for now.

    This operation can optionally return an `!mpi.retval` value that can be used
    to check for errors.
  }];

  let arguments = (ins AnyMemRef : $ref, I32 : $tag, I32 : $rank);

  let results = (outs Optional<MPI_Retval>:$retval);

  let assemblyFormat = "`(` $ref `,` $tag `,` $rank `)` attr-dict `:` "
                       "type($ref) `,` type($tag) `,` type($rank)"
                       "(`->` type($retval)^)?";
}

