sparse_tensor.extract_iteration_space (sparse_tensor::ExtractIterSpaceOp) ¶
Extracts an iteration space from a sparse tensor between certain levels

Syntax:

operation ::= `sparse_tensor.extract_iteration_space` $tensor (`at` $parentIter^)? `lvls` `=` custom<LevelRange>($loLvl, $hiLvl)  attr-dict `:` type($tensor) (`,` type($parentIter)^)? `->` qualified(type($extractedSpace))
Extracts a !sparse_tensor.iter_space from a sparse tensor between certain (consecutive) levels. For sparse levels, it is usually done by loading a postion range from the underlying sparse tensor storage. E.g., for a compressed level, the iteration space is extracted by [pos[i], pos[i+1]) supposing the the parent iterator points at i.

tensor: the input sparse tensor that defines the iteration space. parentIter: the iterator for the previous level, at which the iteration space at the current levels will be extracted. loLvl, hiLvl: the level range between [loLvl, hiLvl) in the input tensor that the returned iteration space covers. hiLvl - loLvl defines the dimension of the iteration space.

The type of returned the value is must be !sparse_tensor.iter_space<#INPUT_ENCODING, lvls = $loLvl to $hiLvl>. The returned iteration space can then be iterated over by sparse_tensor.iterate operations to visit every stored element (usually nonzeros) in the input sparse tensor.

Example:

// Extracts a 1-D iteration space from a COO tensor at level 1.
%space = sparse_tensor.iteration.extract_space %sp at %it1 lvls = 1
  : tensor<4x8xf32, #COO>, !sparse_tensor.iterator<#COO, lvls = 0>
 ->!sparse_tensor.iter_space<#COO, lvls = 1>
Traits: AlwaysSpeculatableImplTrait

Interfaces: ConditionallySpeculatable, InferTypeOpInterface, NoMemoryEffect (MemoryEffectOpInterface)

Effects: MemoryEffects::Effect{}

Attributes: ¶
Attribute	MLIR Type	Description
loLvl	::mlir::IntegerAttr	level attribute
hiLvl	::mlir::IntegerAttr	level attribute
Operands: ¶
Operand	Description
tensor	sparse tensor of any type values
parentIter	sparse iterator
Results: ¶
Result	Description
extractedSpace	sparse iteration space