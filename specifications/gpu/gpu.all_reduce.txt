gpu.all_reduce (gpu::AllReduceOp) ¶
Reduce values among workgroup.

Syntax:

operation ::= `gpu.all_reduce` custom<AllReduceOperation>($op) $value
              (`uniform` $uniform^)? $body attr-dict
              `:` functional-type(operands, results)
The all_reduce op reduces the value of every work item across a local workgroup. The result is equal for all work items of a workgroup.

For example, both

%1 = gpu.all_reduce add %0 {} : (f32) -> (f32)
%2 = gpu.all_reduce %0 {
^bb(%lhs : f32, %rhs : f32):
  %sum = arith.addf %lhs, %rhs : f32
  "gpu.yield"(%sum) : (f32) -> ()
} : (f32) -> (f32)
compute the sum of each work item’s %0 value. The first version specifies the accumulation as operation, whereas the second version specifies the accumulation as code region. The reduction operation must be one of:

Integer types: add, mul, minui, minsi, maxui, maxsi, and, or, xor
Floating point types: add, mul, minnumf, maxnumf, minimumf, maximumf
If uniform flag is set either none or all work items of a workgroup need to execute this op in convergence.

Traits: IsolatedFromAbove, SameOperandsAndResultType

Interfaces: InferTypeOpInterface

Attributes: ¶
Attribute	MLIR Type	Description
op	::mlir::gpu::AllReduceOperationAttr	
built-in reduction operations supported by gpu.allreduce.
uniform	::mlir::UnitAttr	unit attribute
Operands: ¶
Operand	Description
value	Integer or Float
Results: ¶
Result	Description
result	Integer or Float