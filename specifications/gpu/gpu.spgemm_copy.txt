gpu.spgemm_copy (gpu::SpGEMMCopyOp) ¶
SpGEMM copy operation

Syntax:

operation ::= `gpu.spgemm_copy` custom<AsyncDependencies>(type($asyncToken), $asyncDependencies)
              $spmatA (`{` $modeA^ `}`)? `,` $spmatB (`{` $modeB^ `}`)? `,` $spmatC `,` $desc attr-dict `:` $computeType
The gpu.spgemm_copy operation copies the sparse matrix result of a SpGEMM computation.

If the async keyword is present, the op is executed asynchronously (i.e. it does not block until the execution has finished on the device). In that case, it returns a !gpu.async.token in addition to the environment.

Example:

gpu.spgemm_copy %spmatA, %spmatB, %spmatC, %spgemmDesc: f32
The matrix arguments can also be associated with one of the following operators: NON_TRANSPOSE, TRANSPOSE, CONJUGATE_TRANSPOSE. The default value is NON_TRANSPOSE.

Interfaces: GPU_AsyncOpInterface

Attributes: ¶
Attribute	MLIR Type	Description
modeA	::mlir::gpu::TransposeModeAttr	
transpose mode of sparse matrix supported by sparse tensor ops
modeB	::mlir::gpu::TransposeModeAttr	
transpose mode of sparse matrix supported by sparse tensor ops
computeType	::mlir::TypeAttr	any type attribute
Operands: ¶
Operand	Description
asyncDependencies	variadic of async token type
desc	SpGEMM operation handle type
spmatA	sparse matrix handle type
spmatB	sparse matrix handle type
spmatC	sparse matrix handle type
Results: ¶
Result	Description
asyncToken	async token type