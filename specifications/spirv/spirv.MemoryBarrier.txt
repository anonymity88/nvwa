spirv.MemoryBarrier (spirv::MemoryBarrierOp) ¶
Control the order that memory accesses are observed.

Syntax:

operation ::= `spirv.MemoryBarrier` $memory_scope `,` $memory_semantics attr-dict
Ensures that memory accesses issued before this instruction will be observed before memory accesses issued after this instruction. This control is ensured only for memory accesses issued by this invocation and observed by another invocation executing within Memory scope. If the Vulkan memory model is declared, this ordering only applies to memory accesses that use the NonPrivatePointer memory operand or NonPrivateTexel image operand.

Semantics declares what kind of memory is being controlled and what kind of control to apply.

To execute both a memory barrier and a control barrier, see OpControlBarrier.

Example: ¶
spirv.MemoryBarrier "Device", "Acquire|UniformMemory"
Interfaces: QueryCapabilityInterface, QueryExtensionInterface, QueryMaxVersionInterface, QueryMinVersionInterface

Attributes: ¶
Attribute	MLIR Type	Description
memory_scope	::mlir::spirv::ScopeAttr	
valid SPIR-V Scope
memory_semantics	::mlir::spirv::MemorySemanticsAttr	
valid SPIR-V MemorySemantics