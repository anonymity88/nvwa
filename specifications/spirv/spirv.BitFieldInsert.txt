spirv.BitFieldInsert (spirv::BitFieldInsertOp) ¶
Make a copy of an object, with a modified bit field that comes from another object.

Syntax:

operation ::= `spirv.BitFieldInsert` operands attr-dict `:` type($base) `,` type($offset) `,` type($count)
Results are computed per component.

Result Type must be a scalar or vector of integer type.

The type of Base and Insert must be the same as Result Type.

Any result bits numbered outside [Offset, Offset + Count - 1] (inclusive) will come from the corresponding bits in Base.

Any result bits numbered in [Offset, Offset + Count - 1] come, in order, from the bits numbered [0, Count - 1] of Insert.

Count must be an integer type scalar. Count is the number of bits taken from Insert. It will be consumed as an unsigned value. Count can be 0, in which case the result will be Base.

Offset must be an integer type scalar. Offset is the lowest-order bit of the bit field. It will be consumed as an unsigned value.

The resulting value is undefined if Count or Offset or their sum is greater than the number of bits in the result.

Example: ¶
%0 = spirv.BitFieldInsert %base, %insert, %offset, %count : vector<3xi32>, i8, i8
Traits: AlwaysSpeculatableImplTrait

Interfaces: ConditionallySpeculatable, InferTypeOpInterface, NoMemoryEffect (MemoryEffectOpInterface), QueryCapabilityInterface, QueryExtensionInterface, QueryMaxVersionInterface, QueryMinVersionInterface

Effects: MemoryEffects::Effect{}

Operands: ¶
Operand	Description
base	8/16/32/64-bit integer or vector of 8/16/32/64-bit integer values of length 2/3/4/8/16
insert	8/16/32/64-bit integer or vector of 8/16/32/64-bit integer values of length 2/3/4/8/16
offset	8/16/32/64-bit integer
count	8/16/32/64-bit integer
Results: ¶
Result	Description
result	8/16/32/64-bit integer or vector of 8/16/32/64-bit integer values of length 2/3/4/8/16