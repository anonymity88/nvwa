spirv.InBoundsPtrAccessChain (spirv::InBoundsPtrAccessChainOp) ¶
Has the same semantics as OpPtrAccessChain, with the addition that the resulting pointer is known to point within the base object.

Syntax:

operation ::= `spirv.InBoundsPtrAccessChain` $base_ptr `[` $element ($indices^)? `]` attr-dict `:` type($base_ptr) `,` type($element) (`,` type($indices)^)? `->` type($result)
Example: ¶
func @inbounds_ptr_access_chain(%arg0: !spirv.ptr<f32, CrossWorkgroup>, %arg1 : i64) -> () {
  %0 = spirv.InBoundsPtrAccessChain %arg0[%arg1] : !spirv.ptr<f32, CrossWorkgroup>, i64 -> !spirv.ptr<f32, CrossWorkgroup>
  ...
}
Traits: AlwaysSpeculatableImplTrait

Interfaces: ConditionallySpeculatable, NoMemoryEffect (MemoryEffectOpInterface), QueryCapabilityInterface, QueryExtensionInterface, QueryMaxVersionInterface, QueryMinVersionInterface

Effects: MemoryEffects::Effect{}

Operands: ¶
Operand	Description
base_ptr	any SPIR-V pointer type
element	8/16/32/64-bit integer
indices	variadic of 8/16/32/64-bit integer
Results: ¶
Result	Description
result	any SPIR-V pointer type