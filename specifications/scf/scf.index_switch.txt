scf.index_switch (scf::IndexSwitchOp) ¶
Switch-case operation on an index argument

Syntax:

operation ::= `scf.index_switch` $arg attr-dict (`->` type($results)^)?
              custom<SwitchCases>($cases, $caseRegions) `\n`
              `` `default` $defaultRegion
The scf.index_switch is a control-flow operation that branches to one of the given regions based on the values of the argument and the cases. The argument is always of type index.

The operation always has a “default” region and any number of case regions denoted by integer constants. Control-flow transfers to the case region whose constant value equals the value of the argument. If the argument does not equal any of the case values, control-flow transfer to the “default” region.

Example:

%0 = scf.index_switch %arg0 : index -> i32
case 2 {
  %1 = arith.constant 10 : i32
  scf.yield %1 : i32
}
case 5 {
  %2 = arith.constant 20 : i32
  scf.yield %2 : i32
}
default {
  %3 = arith.constant 30 : i32
  scf.yield %3 : i32
}
Traits: RecursiveMemoryEffects, SingleBlockImplicitTerminator<scf::YieldOp>, SingleBlock

Interfaces: RegionBranchOpInterface

Attributes: ¶
Attribute	MLIR Type	Description
cases	::mlir::DenseI64ArrayAttr	i64 dense array attribute
Operands: ¶
Operand	Description
arg	index
Results: ¶
Result	Description
results	variadic of any type