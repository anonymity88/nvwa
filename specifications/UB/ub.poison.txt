//===----------------------------------------------------------------------===//
// PoisonOp
//===----------------------------------------------------------------------===//

def PoisonOp : UB_Op<"poison", [ConstantLike, Pure]> {
  let summary = "Poisoned constant operation.";
  let description = [{
    The `poison` operation materializes a compile-time poisoned constant value
    to indicate deferred undefined behavior.
    `value` attribute is needed to indicate an optional additional poison
    semantics (e.g. partially poisoned vectors), default value indicates results
    is fully poisoned.

    Examples:

    ```
    // Short form
    %0 = ub.poison : i32
    // Long form
    %1 = ub.poison <#custom_poison_elements_attr> : vector<4xi64>
    ```
  }];

  let arguments = (ins DefaultValuedAttr<PoisonAttrInterface, "{}">:$value);
  let results = (outs AnyType:$result);

  let assemblyFormat = "attr-dict (`<` $value^ `>`)? `:` type($result)";

  let hasFolder = 1;
}

#endif // MLIR_DIALECT_UB_IR_UBOPS_TD
